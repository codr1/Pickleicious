package members

import (
    "fmt"
)

templ EditMemberForm(member Member) {
    <script src="/static/js/camera.js"></script>

    <div class="bg-white p-6 rounded-lg shadow">
        <script>
            // Only define if not already defined
            if (typeof window.confirmDelete === 'undefined') {
                window.confirmDelete = function(id, name) {
                    if (confirm(`Are you sure you want to delete ${name}?`)) {
                        htmx.ajax('DELETE', `/api/v1/members/${id}`, {
                            target: '#member-detail',
                            swap: 'outerHTML',
                            afterSwap: function() {
                                // Refresh the members list
                                htmx.trigger('#members-list', 'load');
                            }
                        });
                    }
                }
            }
        </script>
        
        <div id="submit-indicator" class="htmx-indicator">
            <div class="flex items-center justify-center">
                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                <span class="ml-2">Updating...</span>
            </div>
        </div>
        
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-xl font-bold">Edit Member</h2>
            <button
                class="px-4 py-2 bg-red-50 border border-red-300 text-red-700 rounded-lg text-sm hover:bg-red-100"
                hx-on={ fmt.Sprintf("click: confirmDelete(%d, `%s %s`)", member.ID, member.FirstName, member.LastName) }>
                Delete
            </button>
        </div>
        
        <form
            hx-put={fmt.Sprintf("/api/v1/members/%d", member.ID)}
            hx-target="#member-detail"
            hx-indicator="#submit-indicator"
            hx-trigger="submit"
            hx-on::after-request="htmx.trigger('#members-list', 'refreshMembersList')"
            class="space-y-6">
            
            <!-- Photo capture -->
            <div class="mb-6">
                <label class="block text-sm font-medium text-gray-700 mb-2">Photo</label>
                <div class="flex items-start space-x-4">
                    @MemberPhotoEdit(member)
                    <div class="flex flex-col space-y-2">
                        <button
                            id="start-camera"
                            type="button"
                            onclick="startCamera()"
                            class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                            Start Camera
                        </button>
                        <button
                            id="capture-photo"
                            type="button"
                            onclick="capturePhoto()"
                            class="hidden px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700">
                            Take Photo
                        </button>
                        <button
                            id="retake-photo"
                            type="button"
                            onclick="startCamera()"
                            class="hidden px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700">
                            Retake Photo
                        </button>
                        <input type="hidden" id="photo-data" name="photo_data"/>
                    </div>
                </div>
            </div>

            <!-- Name Fields -->
            <div class="grid grid-cols-2 gap-6">
                <div>
                    <label for="first_name" class="block text-sm font-medium text-gray-700">First Name</label>
                    <input 
                        type="text" 
                        id="first_name" 
                        name="first_name" 
                        required 
                        value={member.FirstName}
                        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                    />
                </div>
                <div>
                    <label for="last_name" class="block text-sm font-medium text-gray-700">Last Name</label>
                    <input 
                        type="text" 
                        id="last_name" 
                        name="last_name" 
                        required 
                        value={member.LastName}
                        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                    />
                </div>
            </div>

            <!-- Contact Fields -->
            <div class="grid grid-cols-2 gap-6">
                <div>
                    <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                    <input 
                        type="email" 
                        id="email" 
                        name="email" 
                        required 
                        value={member.EmailStr()}
                        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                    />
                </div>
                <div>
                    <label for="phone" class="block text-sm font-medium text-gray-700">Phone</label>
                    <input 
                        type="tel" 
                        id="phone" 
                        name="phone" 
                        required 
                        value={member.PhoneStr()}
                        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                    />
                </div>
            </div>

            <!-- Additional Fields -->
            <div>
                <label for="date_of_birth" class="block text-sm font-medium text-gray-700">Date of Birth</label>
                <input 
                    type="date" 
                    id="date_of_birth" 
                    name="date_of_birth" 
                    required 
                    value={member.DateOfBirth[:10]}
                    class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                />
            </div>

            <!-- Address Fields -->
            <div class="space-y-6">
                <div>
                    <label for="street_address" class="block text-sm font-medium text-gray-700">Street Address</label>
                    <input 
                        type="text" 
                        id="street_address" 
                        name="street_address" 
                        required 
                        value={member.AddressStr()}
                        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                    />
                </div>
                <div class="grid grid-cols-3 gap-6">
                    <div>
                        <label for="city" class="block text-sm font-medium text-gray-700">City</label>
                        <input 
                            type="text" 
                            id="city" 
                            name="city" 
                            required 
                            value={member.CityStr()}
                            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                        />
                    </div>
                    <div>
                        <label for="state" class="block text-sm font-medium text-gray-700">State</label>
                        <input 
                            type="text" 
                            id="state" 
                            name="state" 
                            required 
                            value={member.StateStr()}
                            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                        />
                    </div>
                    <div>
                        <label for="postal_code" class="block text-sm font-medium text-gray-700">Postal Code</label>
                        <input 
                            type="text" 
                            id="postal_code" 
                            name="postal_code" 
                            required 
                            value={member.PostalCodeStr()}
                            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500"
                        />
                    </div>
                </div>
            </div>

            <!-- Status Fields -->
            <div class="grid grid-cols-2 gap-6">
                <div>
                    <label for="status" class="block text-sm font-medium text-gray-700">Status</label>
                    <select 
                        id="status" 
                        name="status" 
                        required
                        class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 focus:border-blue-500 focus:ring-blue-500">
                        <option value="active" selected?={member.Status == "active"}>Active</option>
                        <option value="inactive" selected?={member.Status == "inactive"}>Inactive</option>
                    </select>
                </div>
                <div class="flex items-center">
                    <input 
                        type="checkbox" 
                        id="waiver_signed" 
                        name="waiver_signed"
                        checked?={member.WaiverSigned}
                        class="h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                    />
                    <label for="waiver_signed" class="ml-2 block text-sm text-gray-900">Waiver Signed</label>
                </div>
            </div>

            <!-- Submit Button and Member ID -->
            <div class="flex justify-between items-center">
                <p class="text-gray-500">Member ID: {fmt.Sprintf("%d", member.ID)}</p>
                <div class="flex space-x-3">
                    <button
                        type="button"
                        class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50"
                        hx-get={fmt.Sprintf("/api/v1/members/%d", member.ID)}
                        hx-target="#member-detail">
                        Cancel
                    </button>
                    <button
                        type="submit"
                        class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700">
                        Save Changes
                    </button>
                </div>
            </div>
        </form>
    </div>
}
