// internal/templates/components/courts/calendar.templ
package courts

import (
	"fmt"
	"time"
)

templ Calendar() {
	<div class="bg-white shadow-sm border border-gray-200 rounded-lg">
		<!-- Calendar Header -->
		<div class="p-3 border-b border-gray-200 bg-gray-50 flex items-center justify-between">
			<div class="flex items-center space-x-3">
				<button 
					class="p-1.5 hover:bg-white rounded text-gray-600 hover:text-gray-800 border border-transparent hover:border-gray-300"
					hx-get="/api/v1/courts/calendar?date=prev"
					hx-target="#calendar-content">
					<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
						<path d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"/>
					</svg>
				</button>
				<h2 class="text-lg font-semibold text-gray-900">{ formatDate(time.Now()) }</h2>
				<button 
					class="p-1.5 hover:bg-white rounded text-gray-600 hover:text-gray-800 border border-transparent hover:border-gray-300"
					hx-get="/api/v1/courts/calendar?date=next"
					hx-target="#calendar-content">
					<svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
						<path d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"/>
					</svg>
				</button>
			</div>
			<div class="flex space-x-2">
				<button class="px-3 py-1.5 text-sm bg-white border border-gray-300 rounded hover:bg-gray-50 text-gray-700">
					Today
				</button>
				<select class="text-sm border border-gray-300 rounded bg-white px-2 py-1.5 text-gray-700">
					<option>Work Week</option>
					<option>Week</option>
					<option>Month</option>
				</select>
			</div>
		</div>

		<div id="calendar-content" class="overflow-x-auto">
			<div class="flex min-w-full">
				<!-- Time slots column -->
				<div class="w-16 flex-none bg-gray-50 border-r border-gray-200">
					<div class="h-12"></div> <!-- Header spacer -->
					@timeSlots()
				</div>

				<!-- Courts grid -->
				<div class="flex-1">
					<div class="grid grid-cols-8">
						<!-- Court headers -->
						for i := 1; i <= 8; i++ {
							<div class="h-12 flex items-center justify-center border-b border-gray-200 bg-gray-50 font-medium text-sm text-gray-700">
								Court { fmt.Sprint(i) }
							</div>
						}

						<!-- Time slots for each court -->
						for hour := 6; hour < 22; hour++ {
							for court := 1; court <= 8; court++ {
								<div class="group relative">
									<div class="absolute inset-0 border-b border-r border-gray-200"></div>
									if hour % 2 == 0 {
										<div class="absolute inset-0 border-t border-gray-100"></div>
									}
									<div 
										class="relative h-12 hover:bg-blue-50 cursor-pointer transition-colors"
										hx-get={ fmt.Sprintf("/api/v1/courts/booking/new?court=%d&hour=%d", court, hour) }
										hx-target="#modal">
									</div>
								</div>
							}
						}
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ timeSlots() {
	for i := 6; i < 22; i++ {
		<div class="relative h-12 -mt-2.5">
			<span class="absolute right-3 text-xs font-medium text-gray-500">
				{ fmt.Sprintf("%d:00", i) }
			</span>
		</div>
	}
}

func formatDate(t time.Time) string {
	return t.Format("Monday, January 2, 2006")
}
